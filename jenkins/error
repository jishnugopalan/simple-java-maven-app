Also:   org.jenkinsci.plugins.workflow.actions.ErrorAction$ErrorId: 0fe8404d-9994-4a7d-8909-4a38e55936e4
groovy.lang.MissingPropertyException: No such property: Artifactory for class: groovy.lang.Binding
	at groovy.lang.Binding.getVariable(Binding.java:63)
	at org.jenkinsci.plugins.scriptsecurity.sandbox.groovy.SandboxInterceptor.onGetProperty(SandboxInterceptor.java:285)


pipeline {
    agent any
    
    tools{
        maven "Maven_Home"
        jfrog "jfrog_cli"
    }
    
    environment{
        TOMCAT_USER= 'admin'
        TOMCAT_PASSWORD= 'admin'
        TOMCAT_PORT= '8090'
        TOMCAT_HOST = 'localhost'
        ARTIFACTORY_SERVER_ID='Artifactory'
        ARTIFACTORY_REPO='example-repo-local'
        WAR_FILE='target/my-app-1.0-SNAPSHOT.jar'
    }

    stages {
        stage('checkout') {
            steps {
                git 'https://github.com/jishnugopalan/simple-java-maven-app.git'
            }
        }
        stage('compile'){
            steps{
                bat "mvn compile"
            }
        }
        stage('test'){
            steps{
                bat "mvn test"
            }
        }
        stage('build'){
            steps{
                bat "mvn package"
            }
        }
        stage('sonarqube analysis'){
            steps{
                withSonarQubeEnv('sonarserver'){
                    bat "mvn clean package sonar:sonar"
                }
            }
        }
        stage('upload to arifactory'){
            steps{
                script {
                    // Configure Artifactory server using the Artifactory plugin for Jenkins
                    def server = Artifactory.server(env.ARTIFACTORY_SERVER_ID)

                    // Define the upload spec for JFrog CLI
                    def uploadSpec = """{
                        "files": [{
                            "pattern": "${WAR_FILE}",
                            "target": "${env.ARTIFACTORY_REPO}/"
                        }]
                    }"""

                    // Write the upload spec to a file
                    writeFile file: 'uploadSpec.json', text: uploadSpec

                    // Use JFrog CLI to upload the WAR file to Artifactory
                    bat """
                    jfrog rt u --url="${server.url()}" ^
                              --user="${server.username()}" ^
                              --password="${server.password()}" ^
                              --spec=uploadSpec.json
                    """
                }
                // script{
                //     def server=Artifactory.server(env.ARTIFACTORY_SERVER_ID)
                //     def uploadSpec="""{
                //         "files":[{
                //             "pattern":"${WAR_FILE}",
                //             "target":"${env.ARTIFACTORY_REPO}/"
                //         }]
                //     }"""
                //     server.cli.setServer(server:env.ARTIFACTORY_SERVER_ID)
                //     writeFile file:'uploadSpec.json', text:uploadSpec bat 'jfrog rt upload --spec=uploadSpec.json'
                // }
            }
        }
        stage('deploy'){
            steps{
                script{
                    def warFile = 'target\\my-app-1.0-SNAPSHOT.war'
                    def deployUrl = "http://${env.TOMCAT_HOST}:${env.TOMCAT_PORT}/manager/text/deploy?path=/my-app-1.0-SNAPSHOT"
                    bat """curl --upload-file ${warFile} ^ --user ${env.TOMCAT_USER}:${env.TOMCAT_PASSWORD} ^ ${deployUrl}"""
                }
            }
        }
    }
   
}

stage('upload to artifactory') {
    steps {
        script {
            def server = Artifactory.server(env.ARTIFACTORY_SERVER_ID)

            // Define the upload spec for JFrog CLI
            def uploadSpec = """{
                "files": [{
                    "pattern": "${env.WAR_FILE}",
                    "target": "${env.ARTIFACTORY_REPO}/"
                }]
            }"""

            // Write the upload spec to a file
            writeFile file: 'uploadSpec.json', text: uploadSpec

            // Use JFrog CLI to upload the WAR file to Artifactory
            bat """
            jfrog rt u --url="${server.getUrl()}" ^
                      --user="${server.getUsername()}" ^
                      --password="${server.getPassword()}" ^
                      --spec=uploadSpec.json
            """
        }
    }
}