pipeline {
    agent any
    
    tools{
        maven "Maven_Home"
        jfrog "jfrog_instance"
    }
    
    environment{
        TOMCAT_USER= 'admin'
        TOMCAT_PASSWORD= 'admin'
        TOMCAT_PORT= '8090'
        TOMCAT_HOST = 'localhost'
        ARTIFACTORY_SERVER_ID='jfrog_cli_remote'
        ARTIFACTORY_REPO='jfrog-cli-remote'
        WAR_FILE='target/my-app-1.0-SNAPSHOT.jar'
    }

    stages {
        stage('checkout') {
            steps {
                git 'https://github.com/jishnugopalan/simple-java-maven-app.git'
            }
        }
        stage('compile'){
            steps{
                bat "mvn compile"
            }
        }
        stage('test'){
            steps{
                bat "mvn test"
            }
        }
        stage('build'){
            steps{
                bat "mvn package"
            }
        }
        stage('sonarqube analysis'){
            steps{
                withSonarQubeEnv('sonarserver'){
                    bat "mvn clean package sonar:sonar"
                }
            }
        }
        stage('upload to arifactory'){
            steps{
                script{
                    def server=Artifactory.server("${env.ARTIFACTORY_SERVER_ID}")
                    def uploadSpec="""{
                        "files":[{
                            "pattern":"${WAR_FILE}",
                            "target":"${env.ARTIFACTORY_REPO}/"
                        }]
                    }"""
                    server.cli.setServer(server:env.ARTIFACTORY_SERVER_ID)
                    writeFile file:'uploadSpec.json', text:uploadSpec bat 'jfrog rt upload --spec=uploadSpec.json'
                }
            }
        }
        stage('deploy'){
            steps{
                script{
                    def warFile = 'target\\my-app-1.0-SNAPSHOT.jar'
                    def deployUrl = "http://${env.TOMCAT_HOST}:${env.TOMCAT_PORT}/manager/text/deploy?path=/my-app-1.0-SNAPSHOT"
                    bat """curl --upload-file ${warFile} ^ --user ${env.TOMCAT_USER}:${env.TOMCAT_PASSWORD} ^ ${deployUrl}"""
                }
            }
        }
    }
   
}
